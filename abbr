ABBR_SOURCE="$HOME"/.zsh_abbrs

typeset -gA abbrs
abbrs=()

function read_abbrs () {
  if [ -f "$ABBR_SOURCE" ]; then
    while read k v; do abbrs[$k]="$v"; done < "$ABBR_SOURCE"
  fi
}

function check_allowed_option() {
  for arg in "$@"; do
    if "$arg"; then
      printf "Illegal combination of options\n"
    fi
  done
}

function add_local_abbr() {
  abbrs+=("$@")
}

function add_global_abbr() {
  local temp_abbrs="$TMPDIR"abbrArray
  rm $temp_abbrs 2> /dev/null
  mktemp $temp_abbrs 1> /dev/null

  for key value in ${(kv)abbrs}; do
    echo "$key $value" >> "$temp_abbrs"
  done

  mv "$temp_abbrs" "$ABBR_SOURCE"
}

function abbr() {
  ABBR_ADD=false
  ABBR_RENAME=false
  ABBR_SHOW=false
  ABBR_LIST=false
  ABBR_ERASE=false
  ABBR_GLOBAL=false
  ABBR_UNIVERSAL=false

  while getopts "arslegU" opt; do
    case "$opt" in
      a)
        disallowed_options=("$ABBR_RENAME" "$ABBR_SHOW" "$ABBR_LIST" "$ABBR_ERASE")
        check_allowed_option $disallowed_options
        ABBR_ADD=true
        ;;
      r)
        disallowed_options=("$ABBR_ADD" "$ABBR_SHOW" "$ABBR_LIST" "$ABBR_ERASE")
        check_allowed_option $disallowed_options
        ABBR_RENAME=true
        ;;
      s)
        disallowed_options=("$ABBR_ADD" "$ABBR_RENAME" "$ABBR_LIST" "$ABBR_ERASE")
        check_allowed_option $disallowed_options
        ABBR_SHOW=true
        ;;
      l)
        disallowed_options=("$ABBR_ADD" "$ABBR_RENAME" "$ABBR_SHOW" "$ABBR_ERASE")
        check_allowed_option $disallowed_options
        ABBR_LIST=true
        ;;
      e)
        disallowed_options=("$ABBR_ADD" "$ABBR_RENAME" "$ABBR_SHOW" "$ABBR_LIST")
        check_allowed_option $disallowed_options
        ABBR_ERASE=true
        ;;
      g)
        disallowed_options=("$ABBR_UNIVERSAL")
        check_allowed_option $disallowed_options
        ABBR_GLOBAL=true
        ;;
      U)
        disallowed_options=("$ABBR_GLOBAL")
        check_allowed_option $disallowed_options
        ABBR_UNIVERSAL=true
        ;;
      *) echo "Unknown option $opt"
    esac
  done

  shift $((OPTIND-1))

  if [[ ! -n $1 ]]; then
    echo 'need arguments'
  elif "$ABBR_ADD"; then
    add_local_abbr "$@"

    if "$ABBR_UNIVERSAL"; then
      sync_global_abbr
    fi
  fi
}

function expand_abbr() {
  local current_word="${LBUFFER/*[ ,;|&\n\t]/}"
  local expansion=${abbrs[$current_word]}

  if [ $expansion ]; then
    local rest="${LBUFFER%%$current_word}"
    LBUFFER="$rest$expansion"
  fi
  zle self-insert
}



zle -N expand_abbr

read_abbrs


bindkey " " expand_abbr
bindkey "^ " magic-space
bindkey -M isearch " " magic-space
bindkey -M isearch "^ " expand_abbr



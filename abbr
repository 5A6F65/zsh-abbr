OPT_SOURCE="$HOME"/.zsh_abbrs

typeset -gA abbrs
abbrs=()

function read_abbrs () {
  if [ -f "$OPT_SOURCE" ]; then
    while read k v; do abbrs[$k]="$v"; done < "$OPT_SOURCE"
  fi
}

function check_allowed_option() {
  for arg in "$@"; do
    if "$arg"; then
      printf "Illegal combination of options\n"
    fi
  done
}

function try_sync_global_abbr() {
  if ! "$OPT_UNIVERSAL"; then
    return
  fi

  local temp_abbrs="$TMPDIR"abbrArray
  rm $temp_abbrs 2> /dev/null
  mktemp $temp_abbrs 1> /dev/null

  for key value in ${(kv)abbrs}; do
    echo "$key $value" >> "$temp_abbrs"
  done

  mv "$temp_abbrs" "$OPT_SOURCE"
}

function add_local_abbr() {
  if [[ $# -lt 2 ]]; then
    print "Wrong number of arguments."
    exit
  fi

  key="$1"
  shift
  value="$@"

  abbrs[$key]="$value"
  try_sync_global_abbr
}

function rename() {
  if [[ -n $3 ]]; then
    print "Wrong number of arguments."
    exit
  fi

  old_key="$1"
  new_key="$2"
  value=${abbrs[$old_key]}
  abbrs[$new_key]="$value"
  unset abbrs["$old_key"]
  try_sync_global_abbr
}

function abbr() {
  OPT_ADD=false
  OPT_RENAME=false
  OPT_SHOW=false
  OPT_LIST=false
  OPT_ERASE=false
  OPT_GLOBAL=false
  OPT_UNIVERSAL=false

  while getopts "arslegU" opt; do
    case "$opt" in
      a)
        disallowed_options=("$OPT_RENAME" "$OPT_SHOW" "$OPT_LIST" "$OPT_ERASE")
        check_allowed_option $disallowed_options
        OPT_ADD=true
        ;;
      r)
        disallowed_options=("$OPT_ADD" "$OPT_SHOW" "$OPT_LIST" "$OPT_ERASE")
        check_allowed_option $disallowed_options
        OPT_RENAME=true
        ;;
      s)
        disallowed_options=("$OPT_ADD" "$OPT_RENAME" "$OPT_LIST" "$OPT_ERASE")
        check_allowed_option $disallowed_options
        OPT_SHOW=true
        ;;
      l)
        disallowed_options=("$OPT_ADD" "$OPT_RENAME" "$OPT_SHOW" "$OPT_ERASE")
        check_allowed_option $disallowed_options
        OPT_LIST=true
        ;;
      e)
        disallowed_options=("$OPT_ADD" "$OPT_RENAME" "$OPT_SHOW" "$OPT_LIST")
        check_allowed_option $disallowed_options
        OPT_ERASE=true
        ;;
      g)
        disallowed_options=("$OPT_UNIVERSAL")
        check_allowed_option $disallowed_options
        OPT_GLOBAL=true
        ;;
      U)
        disallowed_options=("$OPT_GLOBAL")
        check_allowed_option $disallowed_options
        OPT_UNIVERSAL=true
        ;;
      *) echo "Unknown option $opt"
    esac
  done

  shift $((OPTIND-1))

  if [[ ! -n $1 ]]; then
    echo 'need arguments'
  elif "$OPT_ADD"; then
    add_local_abbr "$@"
  elif "$OPT_RENAME"; then
    rename "$@"
  fi
}

function expand_abbr() {
  local current_word="${LBUFFER/*[ ,;|&\n\t]/}"
  local expansion=${abbrs[$current_word]}

  if [ $expansion ]; then
    local rest="${LBUFFER%%$current_word}"
    LBUFFER="$rest$expansion"
  fi
  zle self-insert
}

read_abbrs


zle -N expand_abbr

bindkey " " expand_abbr
bindkey "^ " magic-space
bindkey -M isearch " " magic-space
bindkey -M isearch "^ " expand_abbr


